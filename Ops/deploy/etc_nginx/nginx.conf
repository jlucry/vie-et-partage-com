user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
	worker_connections 768;
	# multi_accept on;
}

http {	
	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;
	gzip_disable "msie6";

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
	
	##
	# Client settings
	##
	client_max_body_size 700M;
	
	##
	# Asp.net core Configs.
	##
	
    include    /etc/nginx/proxy.conf;
    limit_req_zone $binary_remote_addr zone=one:10m rate=5r/s;
    client_body_timeout 10; client_header_timeout 10; send_timeout 10;
    upstream wcms{
        server localhost:5963;
    }
	
	# Default server configuration.
	server {
		# Listen address and port.
        listen 80 default_server;
        listen [::]:80 default_server;
		# Html root directory.
        root /var/www/html;
		# Default html pages.
        index index.html index.htm index.nginx-debian.html;
		# The wirtual host.
        server_name _;
		# Force https on admin url.
		location /admin {
			return 301 https://$host$request_uri;
		}
		# Redirects all traffic.
		location / {
			proxy_pass	http://wcms;
			#limit_req zone=one burst=10;
		}
	}
	
	#server {
	#	listen *:80;
	#	add_header Strict-Transport-Security max-age=15768000;
	#	return 301 https://$host$request_uri;
	#}

#SSL_OFFserver {
#SSL_OFF	listen *:443    ssl;
#SSL_OFF	server_name     dfide.com;
#SSL_OFF	ssl_certificate //etc/letsencrypt/live/dfide.com/cert.pem;
#SSL_OFF	ssl_certificate_key //etc/letsencrypt/live/dfide.com/privkey.pem;
#SSL_OFF	ssl_protocols TLSv1.1 TLSv1.2;
#SSL_OFF	ssl_prefer_server_ciphers on;
#SSL_OFF	ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
#SSL_OFF	ssl_ecdh_curve secp384r1;
#SSL_OFF	ssl_session_cache shared:SSL:10m;
#SSL_OFF	ssl_session_tickets off;
#SSL_OFF	ssl_stapling on; #ensure your cert is capable
#SSL_OFF	ssl_stapling_verify on; #ensure your cert is capable
#
#SSL_OFF	add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
#SSL_OFF	add_header X-Frame-Options DENY;
#SSL_OFF	add_header X-Content-Type-Options nosniff;
#
#SSL_OFF	#root /var/www/html;
#SSL_OFF	#index index.html index.htm index.nginx-debian.html;
#SSL_OFF	#location / {
#SSL_OFF	#	# First attempt to serve request as file, then
#SSL_OFF	#	# as directory, then fall back to displaying a 404.
#SSL_OFF	#	try_files $uri $uri/ =404;
#SSL_OFF	#}
#
#SSL_OFF	#Redirects all traffic
#SSL_OFF	location / {
#SSL_OFF		proxy_pass  http://wcms;
#SSL_OFF		#limit_req   zone=one burst=10;
#SSL_OFF	}
#SSL_OFF}
}
